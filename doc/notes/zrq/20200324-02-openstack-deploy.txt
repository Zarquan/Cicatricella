#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#

    #
    # Four Kafka VMs each with a 512G data disc.
    #   4 core, 4G mem, 512G disc
    # Four Cassandrda VMs each with a 512G data disc.
    #   4 core, 4G mem, 512G disc
    #
    # Four worker VMs.
    #   4 core, 4G mem, 512G disc
    #


    New GitHub project - cicatricella
    https://github.com/Zarquan/Cicatricella


# -----------------------------------------------------
# Checkout the project source.
#[user@desktop]

    cat > "${HOME:?}/cicatricella.env" << 'EOF'
source "${HOME:?}/projects.env"
CICATRICELLA_REPO='git@github.com:Zarquan/cicatricella.git'
CICATRICELLA_HOME="${PROJECTS_ROOT}/LSST-UK/cicatricella"
CICATRICELLA_CODE="${CICATRICELLA_HOME:?}/github-zrq"
CICATRICELLA_USER='dmr'
CICATRICELLA_CLOUD='gaia-prod'
EOF

    source "${HOME}/cicatricella.env"

    if [ ! -e "${CICATRICELLA_CODE:?}" ]    
    then
        pushd "$(dirname ${CICATRICELLA_CODE:?})"
            git clone "${CICATRICELLA_REPO:?}" "$(basename ${CICATRICELLA_CODE:?})"
        popd
    else
        pushd "${CICATRICELLA_CODE:?}"
            git pull
        popd
    fi

# -----------------------------------------------------
# Update our git configuration.
#[user@desktop]

    source "${HOME}/cicatricella.env"

    pushd "${CICATRICELLA_CODE:?}"

        git config user.name  $(secret github.name)
        git config user.email $(secret github.mail)

    popd


# -----------------------------------------------------
# Create the initial project directories.
#[user@desktop]

    source "${HOME}/cicatricella.env"

    pushd "${CICATRICELLA_CODE:?}"

        mkdir doc
        mkdir doc/notes
        mkdir doc/notes/zrq

        mkdir src
        mkdir src/ansible

    popd


# -----------------------------------------------------
# Add Ansible scripts ....
#[user@desktop]

    ....
    ....
    ....


# -----------------------------------------------------
# Create our cloud YAML file.
#[user@desktop]

cat > "${HOME}/clouds.yaml" << EOF

clouds:

  gaia-dev:
    auth:
      auth_url: 'https://cumulus.openstack.hpc.cam.ac.uk:5000/v3'
      application_credential_id:     '$(secret 'zrq-gaia-dev.APP_CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-dev.APP_CREDENTIAL_SECRET')'
    region_name: 'RegionOne'
    interface:   'public'
    identity_api_version: 3
    auth_type: 'v3applicationcredential'

  gaia-dev-super:
    auth:
      auth_url: 'https://cumulus.openstack.hpc.cam.ac.uk:5000/v3'
      application_credential_id:     '$(secret 'zrq-gaia-dev-super.APX_CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-dev-super.APX_CREDENTIAL_SECRET')'
    region_name: 'RegionOne'
    interface:   'public'
    identity_api_version: 3
    auth_type: 'v3applicationcredential'

  gaia-prod:
    auth:
      auth_url: 'https://cumulus.openstack.hpc.cam.ac.uk:5000/v3'
      application_credential_id:     '$(secret 'zrq-gaia-prod.APP_CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-prod.APP_CREDENTIAL_SECRET')'
    region_name: 'RegionOne'
    interface:   'public'
    identity_api_version: 3
    auth_type: 'v3applicationcredential'

  gaia-prod-super:
    auth:
      auth_url: 'https://cumulus.openstack.hpc.cam.ac.uk:5000/v3'
      application_credential_id:     '$(secret 'zrq-gaia-prod-super.APX_CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-prod-super.APX_CREDENTIAL_SECRET')'
    region_name: 'RegionOne'
    interface:   'public'
    identity_api_version: 3
    auth_type: 'v3applicationcredential'

EOF


# -----------------------------------------------------
# Allow podman container to use the SSH authentication socket on our desktop.
# https://osric.com/chris/accidental-developer/2017/11/selinux-audit2why-audit2allow-policy-files/
# https://stackoverflow.com/a/52326925
#[user@desktop]

    #
    # See 20200222-01-ansible-deploy.txt
    #


# -----------------------------------------------------
# Install podman.
#[user@desktop]

    sudo dnf install podman

    >   ....
    >   Installed:
    >     podman-2:1.7.0-2.fc31.x86_64
    >     ....



# -----------------------------------------------------
# Check our local settings.
#[user@desktop]

    source "${HOME}/cicatricella.env"

    cat << EOF
CICATRICELLA_CODE  [${CICATRICELLA_CODE:?}]
CICATRICELLA_USER  [${CICATRICELLA_USER:?}]
CICATRICELLA_CLOUD [${CICATRICELLA_CLOUD:?}]
EOF

--START--
CICATRICELLA_CODE  [/var/local/projects/LSST-UK/cicatricella/github-zrq]
CICATRICELLA_USER  [dmr]
CICATRICELLA_CLOUD [gaia-prod]
--END--


# -----------------------------------------------------
# Create a local container to work from.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname ansibler \
        --env "clouduser=${CICATRICELLA_USER:?}" \
        --env "cloudname=${CICATRICELLA_CLOUD:?}" \
        --env "SSH_AUTH_SOCK=/tmp/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock:rw,z" \
        --volume "${HOME}/clouds.yaml:/tmp/clouds.yaml:ro,z" \
        --volume "${CICATRICELLA_CODE:?}/src/ansible:/mnt/ansible:ro,Z" \
        atolmis/ansible-client:latest \
        bash


--START--
....
....
--END--


# -----------------------------------------------------
# Create our Ansible include vars file.
#[root@ansibler]

    cat > /tmp/ansible-vars.yml << EOF
buildtag:  'cica-$(date '+%Y%m%d')'
cloudname: '${cloudname}'
clouduser: 'fedora'
EOF


# -----------------------------------------------------
# Link our clouds.cfg file.
# https://docs.ansible.com/ansible/latest/reference_appendices/config.html#the-configuration-file
#[root@ansibler]

    mkdir /etc/openstack
    pushd /etc/openstack
        ln -sf /tmp/clouds.yaml
    popd


# -----------------------------------------------------
# Link our ansible.cfg file.
#[root@ansibler]

    pushd /root/
        ln -s /mnt/ansible/ansible.cfg
    popd

  
# -----------------------------------------------------
# Run the scripts from our home directory.
# (needed to pick up ansible.cfg)
#[root@ansibler]
  
    cd /root/

    
# -----------------------------------------------------
# Create our internal network.
#[root@ansibler]
    
    ansible-playbook \
        --inventory "/mnt/ansible/hosts.yml" \
        "/mnt/ansible/01-create-network.yml"

--START--
PLAY [Create our internal network] **********************************************************************************************************************************************************************************************************

TASK [Create our internal network] **********************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Create a subnet for our internal network] *********************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Create a router for our internal network] *********************************************************************************************************************************************************************************************
changed: [localhost]
--END--


# -----------------------------------------------------
# Create our gateway node.
#[root@ansibler]
    
    ansible-playbook \
        --inventory "/mnt/ansible/hosts.yml" \
        "/mnt/ansible/02-create-gateway.yml"

--START--
PLAY [Create our gateway node] **************************************************************************************************************************************************************************************************************

TASK [Create a security group for our gateway node] *****************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Add a security rule for IPv4 SSH] *****************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Add a security rule for IPv6 SSH] *****************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Create our gateway node] **************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Assign a floating IP address to our gateway node] *************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Apply the gateway security group to our floating IP address] **************************************************************************************************************************************************************************
ok: [localhost]
--END--


# -----------------------------------------------------
# Create our Zookeeper nodes.
#[root@ansibler]
    
    ansible-playbook \
        --inventory "/mnt/ansible/hosts.yml" \
        "/mnt/ansible/03-create-zookeepers.yml"

--START--
PLAY [Create our Zookeeper nodes] ***********************************************************************************************************************************************************************************************************

TASK [Create a security group for our Zookeeper nodes] **************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Add a security rule to allow SSH from our gateway] ************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Create our Zookeeper nodes] ***********************************************************************************************************************************************************************************************************
changed: [localhost] => (item=zookeeper-01)
changed: [localhost] => (item=zookeeper-02)
--END--


# -----------------------------------------------------
# Create our Kafka nodes.
#[root@ansibler]
    
    ansible-playbook \
        --inventory "/mnt/ansible/hosts.yml" \
        "/mnt/ansible/04-create-kafkas.yml"

--START--
PLAY [Create our Kafka nodes] ***************************************************************************************************************************************************************************************************************

TASK [Create a security group for our Kafka nodes] ******************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Add a security rule to allow SSH from our gateway] ************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Create our Kafka nodes] ***************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=kafka-01)
changed: [localhost] => (item=kafka-02)

TASK [Create our Kafka data volumes] ********************************************************************************************************************************************************************************************************
included: /mnt/ansible/tasks/openstack-volumes.yml for localhost
included: /mnt/ansible/tasks/openstack-volumes.yml for localhost

TASK [Create data volumes for [kafka-01]] ***************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'data-01', 'device': '/dev/sdb', 'size': 25})
changed: [localhost] => (item={'name': 'data-02', 'device': '/dev/sdc', 'size': 25})

TASK [Attach data volumes to [kafka-01]] ****************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'data-01', 'device': '/dev/sdb', 'size': 25})
changed: [localhost] => (item={'name': 'data-02', 'device': '/dev/sdc', 'size': 25})

TASK [Create data volumes for [kafka-02]] ***************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'data-01', 'device': '/dev/sdb', 'size': 25})
changed: [localhost] => (item={'name': 'data-02', 'device': '/dev/sdc', 'size': 25})

TASK [Attach data volumes to [kafka-02]] ****************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'data-01', 'device': '/dev/sdb', 'size': 25})
changed: [localhost] => (item={'name': 'data-02', 'device': '/dev/sdc', 'size': 25})
--END--


# -----------------------------------------------------
# Create our Cassandra nodes.
#[root@ansibler]
    
    ansible-playbook \
        --inventory "/mnt/ansible/hosts.yml" \
        "/mnt/ansible/05-create-cassandras.yml"

--START--
PLAY [Create our Cassandra nodes] ***********************************************************************************************************************************************************************************************************

TASK [Create a security group for our Cassandra nodes] **************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Add a security rule to allow ssh from our gateway] ************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Create our Cassandra nodes] ***********************************************************************************************************************************************************************************************************
changed: [localhost] => (item=cassandra-01)
changed: [localhost] => (item=cassandra-02)

TASK [Create our Cassandra data volumes] ****************************************************************************************************************************************************************************************************
included: /mnt/ansible/tasks/openstack-volumes.yml for localhost
included: /mnt/ansible/tasks/openstack-volumes.yml for localhost

TASK [Create data volumes for [cassandra-01]] ***********************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'data-01', 'device': '/dev/sdb', 'size': 25})
changed: [localhost] => (item={'name': 'data-02', 'device': '/dev/sdc', 'size': 25})

TASK [Attach data volumes to [cassandra-01]] ************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'data-01', 'device': '/dev/sdb', 'size': 25})
changed: [localhost] => (item={'name': 'data-02', 'device': '/dev/sdc', 'size': 25})

TASK [Create data volumes for [cassandra-02]] ***********************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'data-01', 'device': '/dev/sdb', 'size': 25})
changed: [localhost] => (item={'name': 'data-02', 'device': '/dev/sdc', 'size': 25})

TASK [Attach data volumes to [cassandra-02]] ************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'data-01', 'device': '/dev/sdb', 'size': 25})
changed: [localhost] => (item={'name': 'data-02', 'device': '/dev/sdc', 'size': 25})
--END--


# -----------------------------------------------------
# Create our worker nodes.
#[root@ansibler]
    
    ansible-playbook \
        --inventory "/mnt/ansible/hosts.yml" \
        "/mnt/ansible/06-create-workers.yml"

--START--
PLAY [Create our worker nodes] **************************************************************************************************************************************************************************************************************

TASK [Create a security group for our worker nodes] *****************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Add a security rule to allow ssh from our gateway] ************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Create our worker nodes] **************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=worker-01)
changed: [localhost] => (item=worker-02)
--END--


# -----------------------------------------------------
# Create our local SSH config.
#[root@ansibler]
    
    ansible-playbook \
        --inventory "/mnt/ansible/hosts.yml" \
        "/mnt/ansible/07-config-ssh.yml"

--START--
PLAY [Create local SSH config for Ansible client] *******************************************************************************************************************************************************************************************

TASK [Check our local SSH directory] ********************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Discover our gateway node] ************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [Generate our local SSH config] ********************************************************************************************************************************************************************************************************
changed: [localhost]
--END--


# -----------------------------------------------------
# Create our internal [/etc/hosts] files.
#[root@ansibler]
    
    ansible-playbook \
        --inventory "/mnt/ansible/hosts.yml" \
        "/mnt/ansible/08-config-dns.yml"

--START--
PLAY [Deploy [/etc/hosts] files to resolve names] *******************************************************************************************************************************************************************************************

TASK [Discover our gateway nodes] ***********************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [Discover our Zookeeper nodes] *********************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [Discover our Kafka nodes] *************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [Discover our Cassandra nodes] *********************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [Discover our worker nodes] ************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [Generate our DNS hosts file] **********************************************************************************************************************************************************************************************************
ok: [localhost]

PLAY [gateway] ******************************************************************************************************************************************************************************************************************************

TASK [Deploy our [/etc/hosts] file to our gateway] ******************************************************************************************************************************************************************************************
ok: [gateway]

PLAY [zookeepers:kafkas:cassandras:workers] *************************************************************************************************************************************************************************************************

TASK [Deploy our [/etc/hosts] file to our internal hosts] ***********************************************************************************************************************************************************************************
ok: [zookeeper-02]
ok: [cassandra-01]
ok: [zookeeper-01]
ok: [kafka-01]
ok: [kafka-02]
ok: [cassandra-02]
ok: [worker-02]
ok: [worker-01]
--END--


# -----------------------------------------------------
# Commit our changes and push them to GitHub.
#[user@desktop]

    source "${HOME}/cicatricella.env"

    pushd "${CICATRICELLA_CODE:?}"

        git add .
        git commit -m "Initial set of Ansible scripts"
        git commit -m "...."
        git push

    popd

--START--
--END--



